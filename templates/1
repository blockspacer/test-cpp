#include <iostream>
#include <vector>

template<typename Policy>
struct TestStruct {
    using Other = typename Policy::template Selector<int>::type;
};

template<typename>
class my_array {};

template<template<typename> typename Allocator>
struct Test1 {
    std::vector<int, Allocator>;
};

template<typename K, typename V, template<typename> typename C = my_array>
class Map
{
    C<K> key;
    C<V> value;
};

void test0() {

}

int main() {
    test0();

    return 0;
}
